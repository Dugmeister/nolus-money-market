stages:
  - prepare
  - check
  - test
  - build

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo_home

default:
# use specific tag here in order to
# 1) be able to control the build, and
# 2) update to a newer version. With "latest" and the default '-if-not-present' Docker executor policy that is not possible.
  image: "rust:1.63"

.default_rules:
  rules:
    - if: $CI_COMMIT_TAG != null && $CI_COMMIT_REF_PROTECTED == "true"

cache:
  paths:
    - target/
    - cargo_home/

prepare_node:
  stage: prepare
  script:
    - apt update && apt install bash
    - echo 'y' | apt install curl
    - echo 'y' | apt install jq
    - mkdir -p $CARGO_HOME
    - rustc --version && cargo --version

check_wasm:cargo:
  stage: check
  script:
    - cargo install cosmwasm-check
    - cargo workspaces exec --no-bail cargo build --target wasm32-unknown-unknown
    - $CARGO_HOME/bin/cosmwasm-check ./target/wasm32-unknown-unknown/debug/*.wasm

schema:cargo:
  stage: test
  variables:
    SCHEMA_DIR: "contracts-schemas"
    SCHEMA_DIR_RESULT: "schemas.tar.gz"
  script:
    - cargo install cargo-workspaces
    - cargo workspaces exec --no-bail cargo run --example schema
    - /bin/bash ./scripts/collect-contracts-schemas.sh $SCHEMA_DIR
    - tar -czvf $SCHEMA_DIR_RESULT $SCHEMA_DIR
  artifacts:
    name: "schemas-$CI_COMMIT_REF_SLUG"
    paths:
      - $SCHEMA_DIR_RESULT

test:cargo:
  stage: test
  coverage: '/^\d+.\d+% coverage/'
  script:
    - cargo install cargo-tarpaulin
    - cargo tarpaulin --out Xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml

lint:cargo:
  stage: test
  script:
    - rustup component add clippy
    - ./lint.sh

build-and-optimization:cargo:
  stage: build
  tags:
    - shell
  rules:
    - !reference [.default_rules, rules]
  script:
    - sudo docker run --rm -v "$(pwd)":/code --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target
      --mount type=volume,source=rustup_dir_cache,target=/usr/local/rustup
      --mount type=volume,source=cargo_dir_cache,target=/usr/local/cargo
      --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry
      cosmwasm/workspace-optimizer:0.12.8
    - sudo cp scripts/deploy-contracts-genesis.sh artifacts/
  artifacts:
    paths:
    - artifacts/
