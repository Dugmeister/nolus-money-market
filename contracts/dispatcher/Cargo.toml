[package]
name = "rewards_dispatcher"
version = "0.1.0"
authors = ["Nina Nikolova <n.nikolova@nolus.io>"]
edition.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["contract-with-bindings"]
contract-with-bindings = ["contract"]
contract = []

[dependencies]
lpp = { path = "../lpp", default-features = false, features = ["stub"] }
oracle = { path = "../oracle", default-features = false, features = ["stub", "convert"] }
timealarms = { path = "../timealarms", default-features = false }
treasury = { path = "../treasury", default-features = false }
currency = { path = "../../packages/currency" }
finance = { path = "../../packages/finance" }
marketprice = { path = "../../packages/marketprice" }
platform = { path = "../../packages/platform" }
sdk = { path = "../../packages/sdk", features = ["contract"] }

# Required as a dependency by `entry_point` attribute macro
cosmwasm-std = { workspace = true }

serde = { workspace = true, features = ["derive"] }
thiserror = { workspace = true }

[dev-dependencies]
anyhow = "1"
schema = { path = "../../packages/schema" }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
sdk = { path = "../../packages/sdk", default-features = false, features = ["testing"] }
