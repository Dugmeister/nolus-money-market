name: General Rust Workflow
run-name: "Running general Rust workflow by ${{ github.actor }}"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    tags:
      - '*'
    paths-ignore:
      - "README.md"
  pull_request:
    branches:
      - "main"
    paths-ignore:
      - "README.md"

env:
  CARGO_TERM_COLOR: "always"

jobs:
  check-lock-file:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Check Formatting"
        run: "cargo check -p sdk --locked"
  check-formatting:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Check Formatting"
        run: "cargo fmt --check"
  check-dependencies:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Install cargo-audit"
        run: "cargo install cargo-audit"
      - name: "Audit dependencies"
        run: "cargo audit"
  linting:
    runs-on: "ubuntu-latest"
    needs:
      - "check-formatting"
      - "check-dependencies"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Install linter"
        run: "rustup component add clippy"
      - name: "Running linter"
        run: "cargo clippy --all-targets"
  test:
    runs-on: "ubuntu-latest"
    needs:
      - "linting"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Install cargo-tarpaulin"
        run: "cargo install cargo-tarpaulin"
      - name: "Run code coverage testing"
        run: "cargo tarpaulin --out Xml >> output.log"
      - name: "Produce code coverage summary"
        run: "(tail --lines=1 output.log | sed -r -e 's/^([0-9]+(\.[0-9]+)?%).*/# Code coverage: \1/') >> $GITHUB_STEP_SUMMARY"
      - name: "Archive code coverage results"
        uses: "actions/upload-artifact@v1"
        with:
          name: "code-coverage-report"
          path: "cobertura.xml"
      - name: "Run tests in release profile"
        run: "cargo test --release"
